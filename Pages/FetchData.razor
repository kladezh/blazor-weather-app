@page "/fetchdata"
@inject HttpClient Http

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecastDays == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp</th>
                <th>Condition</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var day in forecastDays)
            {
                <tr>
                    <td>@day.Date.ToShortDateString()</td>
                    <td>@day.Day.AvgTemp</td>
                    <td>@day.Day.Condition.Text</td>
                </tr>
            }
        </tbody>
    </table>
}


@if(astro != null)
{
    <div>sunrise : @astro.Sunrise</div>
    <div>sunset : @astro.Sunset</div>
    <div>moon phase : @astro.MoonPhase</div>
    <div>moon illum : @astro.MoonIllumination</div>
}

@code {
    private ForecastDayDto[]? forecastDays;
    private AstroDto? astro;

    protected override async Task OnInitializedAsync()
    {

        var forecast = await Http.GetFromJsonAsync<ForecastDto>("https://api.weatherapi.com/v1/forecast.json?&q=Volgograd&days=7");
        forecastDays = forecast.ForecastInfo.ForecastDays;

        var astronomy = await Http.GetFromJsonAsync<AstronomyDto>("https://api.weatherapi.com/v1/astronomy.json?&q=Volgograd");
        astro = astronomy.AstronomyInfo.Astro;
    }
}
